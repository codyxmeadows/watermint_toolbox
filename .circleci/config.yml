version: 2.1
jobs:
  build:
    docker:
      - image: techknowlogick/xgo:go-1.19.x
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
    parameters:
      target:
        type: string
    steps:
      - checkout
      - run: shasum -a 256 go.mod > go.mod.sum
      - restore_cache:
          key: build-mod-{{ checksum "go.mod.sum" }}
      - run:
          command: bash ./build.sh << parameters.target >>
          environment:
            TOOLBOX_PATCH_VERSION: << pipeline.number >>

      - save_cache:
          key: build-mod-{{ checksum "go.mod.sum" }}
          paths:
            - $HOME/go/pkg/mod
            - /go/pkg/mod

  test:
    docker:
      - image: cimg/go:1.19
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
    parallelism: 3
    steps:
      - checkout
      - run: shasum -a 256 go.mod > go.mod.sum
      - restore_cache:
          key: test-mod-{{ checksum "go.mod.sum" }}
      - run: mkdir -p test/results
      - run: go get golang.org/x/tools/cmd/cover
      - run: go list ./... | circleci tests split --split-by=timings --timings-type=filename > ./test/target_package
      - run: bash ./test/test.sh
      - save_cache:
          key: test-mod-{{ checksum "go.mod.sum" }}
          paths:
            - $HOME/go/pkg/mod
            - /go/pkg/mod
      - store_test_results:
          path: test/results
      - store_artifacts:
          path: test/results
      - run: bash <(curl -s https://codecov.io/bash)

workflows:
  version: 2
  build_and_test:
    jobs:
      - build:
          target: linux
      - build:
          target: linux-arm
      - build:
          target: win
      - build:
          target: mac
      - build:
          target: mac-arm
      - test
